package tms.intersection;

import tms.route.Route;
import tms.route.TrafficSignal;
import tms.util.TimedItem;

import java.util.Arrays;
import java.util.List;

public class IntersectionLights implements TimedItem {
    private List<Route> connections;
    private int yellowTime;
    private int duration;
    private int secondsPassed;
    private int connectionsIndex;

    public IntersectionLights(List<Route> connections, int yellowTime, int duration) {
        this.connections = connections;
        this.yellowTime = yellowTime;
        this.duration = duration;
        this.secondsPassed = 0;
        this.connectionsIndex = 0;
        this.connections.get(connectionsIndex).setSignal(TrafficSignal.GREEN);
    }

    public int getYellowTime() {
        return yellowTime;
    }

    public void setDuration(int duration) {
        this.duration = duration;
        secondsPassed = 0;
        connections.get(connectionsIndex).setSignal(TrafficSignal.GREEN);
    }

    @Override
    public void oneSecond() {
        secondsPassed++;
        if (secondsPassed % (duration - yellowTime) == 0) {
            connections.get(connectionsIndex).setSignal(TrafficSignal.YELLOW);
        } else if (secondsPassed % duration == 0) {
            connections.get(connectionsIndex).setSignal(TrafficSignal.RED);
            connectionsIndex++;
            if (connectionsIndex == connections.size()) {
                connectionsIndex = 0;
            }
            connections.get(connectionsIndex).setSignal(TrafficSignal.GREEN);
        }
    }

    @Override
    public String toString() {
        String[] intersectionIds = new String[connections.size()];
        for (int i = 0; i < connections.size(); i++) {
            intersectionIds[i] = connections.get(i).getFrom().getId();
        }
        return duration + ":" + Arrays.toString(intersectionIds)
                .replace("[", "").replace("]", "").replace(", ", ",");
    }

}
